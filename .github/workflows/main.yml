name: Main
on:
  push:
    branches:
      - master
      - develop
    tags:
      - v*
  pull_request:
    branches:
      - master
      - develop

jobs:
  linux-x86_64:
    runs-on: ubuntu-latest
    name: linux-x86_64

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: scripts/linux/install_deps.sh

      - name: Build project
        run: scripts/linux/build.sh

      - name: Test project
        run: scripts/linux/test.sh

      - name: Run example
        run: scripts/linux/example.sh

  qemu-linux-x86_64:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - kernel: 4.4.271
          - kernel: 4.9.271
          - kernel: 4.14.235
          - kernel: 4.19.193
          - kernel: 5.4.124
          - kernel: 5.10.42
          - kernel: 5.12.10
    name: qemu-x86_64-linux-${{ matrix.kernel }}

    steps:
      - uses: actions/checkout@v2

      - name: Cache buildroot sdk tarballs
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: targets/x86_64-buildroot-linux-${{ matrix.kernel }}.tar.xz
          key: x86_64-buildroot-linux-${{ matrix.kernel }}

      - name: Install dependencies
        run: scripts/qemu/install_deps.sh

      - name: Build project
        run: scripts/qemu/build.sh ${{ matrix.kernel }}

      - name: Run example
        run: scripts/qemu/example.sh

  release:
    needs: [linux-x86_64, qemu-linux-x86_64]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    name: release

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Pull docker image
        run: docker pull arella/aosv-latexpdf

      - name: Build release package
        run: scripts/linux/release.sh

      - name: Build documentation
        run: scripts/linux/build_docs.sh

      - name: Upload assets to release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: |
            build/linux-ums-*.tar.gz

      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/public
